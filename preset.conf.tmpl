{{ $static := (getenv "NGINX_STATIC_EXT_REGEX" "css|cur|js|jpe?g|gif|htc|ico|png|xml|otf|ttf|eot|woff|woff2|svg|mp4|svgz|ogg|ogv|pdf|pptx?|zip|tgz|gz|rar|bz2|doc|xls|exe|tar|mid|midi|wav|bmp|rtf|txt|map|webp|json|html") }}

include fastcgi.conf;

index index.php;

## only allow accessing the following php files
location ~ ^/(index|matomo|piwik|js/index|plugins/HeatmapSessionRecording/configs)\.php$ {
    fastcgi_split_path_info ^(.+?\.php)(/.*)$;
    fastcgi_pass php;
    track_uploads {{ getenv "NGINX_TRACK_UPLOADS" "uploads 60s" }};
}

## deny access to all other .php files
location ~* ^.+\.php$ {
    deny all;
    return 403;
}

## disable all access to the following directories
location ~ ^/(config|tmp|core|lang) {
    deny all;
    return 403; # replace with 404 to not show these directories exist
}

location ~ /\.ht {
    deny  all;
    return 403;
}

location ~ js/container_.*_preview\.js$ {
    expires off;
    add_header Cache-Control 'private, no-cache, no-store';
}

location ~* ^.+\.(?:{{ $static }})$ {
    access_log {{ getenv "NGINX_STATIC_ACCESS_LOG" "off" }};
    tcp_nodelay {{ getenv "NGINX_STATIC_TCP_NODELAY" "off" }};
    expires {{ getenv "NGINX_STATIC_EXPIRES" "1y" }};

    add_header Pragma "cache";
    add_header Cache-Control "public";

    open_file_cache {{ getenv "NGINX_STATIC_OPEN_FILE_CACHE" "max=1000 inactive=30s" }};
    open_file_cache_valid {{ getenv "NGINX_STATIC_OPEN_FILE_CACHE_VALID" "30s" }};
    open_file_cache_min_uses {{ getenv "NGINX_STATIC_OPEN_FILE_CACHE_MIN_USES" "2" }};
    open_file_cache_errors {{ getenv "NGINX_STATIC_OPEN_FILE_CACHE_ERRORS" "off" }};

    {{- if getenv "NGINX_STATIC_404_TRY_INDEX" }}
    try_files $uri /index.php?$args;
    {{- end }}
}

location ~ ^/(libs|vendor|plugins|misc|node_modules) {
    deny all;
    return 403;
}

## properly display textfiles in root directory
location ~/(.*\.md|LEGALNOTICE|LICENSE) {
    default_type text/plain;
}

location / {
    try_files $uri $uri/ =404;
}
